.. index::
    single: Customization; RoutingAutoBundle

Defunct Route Handlers
======================

When an already-persisted document is updated and the URI generated by the
RoutingAuto system is changed, a *new* route is always created. Defunct route
handlers decide what to do with the *old* routes.

remove
------

The remove handler will simply delete any old routes. This is the **default**
action.

.. configuration-block::

    .. code-block:: yaml

        stdClass:
            uri_schema: /cmf/blog
            defunct_route_handler: remove

    .. code-block:: xml

        <auto-mapping xmlns="http://cmf.symfony.com/schema/routing_auto">
            <mapping class="stdClass" uri-schema="/cmf/blog">
                <defunct-route-handler name="remove" />
            </mapping>
        </auto-mapping>

.. note::

    The above example is illustrative only. Removing old routes is the default
    action, so it is not necessary to explicitly configure this handler.

leave_redirect
--------------

The ``LeaveRedirectDefunctRouteHandler`` will automatically update old routes
to redirect the browser to the route which has replaced it. This effectively
means you can rename your objects without worrying about users receiving HTTP
404 responses.

The handler will replace the old route with a ``RedirectRoute`` at the same
path.

.. configuration-block::

    .. code-block:: yaml

        stdClass:
            uri_schema: /cmf/blog
            defunct_route_handler: leave_redirect

    .. code-block:: xml

        <auto-mapping xmlns="http://cmf.symfony.com/schema/routing_auto">
            <mapping class="stdClass" uri-schema="/cmf/blog">
                <defunct-route-handler name="leave_redirect" />
            </mapping>
        </auto-mapping>

For the redirect to work you will also need to configure a redirect controller
in the ``cmf_routing`` configuration:

.. configuration-block::

    .. code-block:: yaml

        # app/config/config.yml
        cmf_routing:
            dynamic:
                controllers_by_class:
                    Symfony\Cmf\Bundle\RoutingBundle\Doctrine\Phpcr\RedirectRoute: cmf_routing.redirect_controller:redirectAction

    .. code-block:: xml

        <!-- app/config/config.xml -->
        <?xml version="1.0" encoding="UTF-8" ?>
        <container xmlns="http://symfony.com/schema/dic/services">

            <config xmlns="http://cmf.symfony.com/schema/dic/routing">
                <dynamic>
                    <controller-by-class
                        class="Symfony\Cmf\Bundle\RoutingBundle\Doctrine\Phpcr\RedirectRoute">
                        cmf_routing.redirect_controller:redirectAction
                    </controller-by-class>
                </dynamic>
            </config>

        </container>

    .. code-block:: php

        // app/config/config.php
        $container->loadFromExtension('cmf_routing', array(
            'dynamic' => array(
                'controllers_by_class' => array(
                    'Symfony\Cmf\Bundle\RoutingBundle\Doctrine\Phpcr\RedirectRoute' => 'cmf_routing.redirect_controller:redirectAction',
                ),
            ),
        ));

Creating a Custom Defunct Route Handler
---------------------------------------

To create a custom default route handler, you have to implement
``DefunctRouteHandlerInterface``. This requires a method ``handleDefunctRoutes()``.

They are not alltogether trivial - the following handler removes old routes and is
the default handler::

    namespace Symfony\Cmf\Component\RoutingAuto\DefunctRouteHandler;

    use Symfony\Cmf\Component\RoutingAuto\DefunctRouteHandlerInterface;
    use Symfony\Cmf\Component\RoutingAuto\UriContextCollection;
    use Symfony\Cmf\Component\RoutingAuto\Adapter\AdapterInterface;

    class RemoveDefunctRouteHandler implements DefunctRouteHandlerInterface
    {
        protected $adapter;

        public function __construct(AdapterInterface $adapter)
        {
            $this->adapter = $adapter;
        }

        public function handleDefunctRoutes(UriContextCollection $uriContextCollection)
        {
            // get all routes that refer to the subject object
            $referringAutoRouteCollection = $this->adapter->getReferringAutoRoutes(
                $uriContextCollection->getSubjectObject()
            );

            foreach ($referringAutoRouteCollection as $referringAutoRoute) {
                // if the route no longer exists
                if (false === $uriContextCollection->containsAutoRoute($referringAutoRoute)) {
                    // get the new route
                    $newRoute = $uriContextCollection->getAutoRouteByTag($referringAutoRoute->getAutoRouteTag());

                    // migrate the children to the new route
                    $this->adapter->migrateAutoRouteChildren($referringAutoRoute, $newRoute);
                    // remove the old route
                    $this->adapter->removeAutoRoute($referringAutoRoute);
                }
            }
        }
    }

All defunct route handlers should be tagged with
``cmf_routing_auto.defunct_route_handler``. The above class is registered as following:

.. configuration-block::

    .. code-block:: yaml

        services:
            acme_cms.defunct_route_handler.foobar:
                class: Acme\CmsBundle\RoutingAuto\DefunctRouteHandler\RemoveConflictResolver
                tags:
                    - { name: cmf_routing_auto.defunct_route_handler, alias: "remove"}

    .. code-block:: xml

        <?xml version="1.0" encoding="UTF-8" ?>
        <container xmlns="http://symfony.com/schema/dic/services">
            <service
                id="acme_cms.defunct_route_handler.foobar"
                class="Acme\CmsBundle\RoutingAuto\DefunctRouteHandler\RemoveConflictResolver"
            >
                <tag name="cmf_routing_auto.defunct_route_handler" alias="remove"/>
            </service>
        </container>

    .. code-block:: php

        use Symfony\Component\DependencyInjection\Definition;

        $definition = new Definition('Acme\CmsBundle\RoutingAuto\DefunctRouteHandler\RemoveConflictResolver');
        $definition->addTag('cmf_routing_auto.defunct_route_handler', array('alias' => 'foobar'));

        $container->setDefinition('acme_cms.defunct_route_handler.remove', $definition);
